!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.beta=t():e.beta=t()}("undefined"!=typeof self?self:this,(()=>(()=>{"use strict";var e={};function t(e){return e._useProp(void 0)}function r(e,t){return e._useProp((()=>Object.assign(Object.assign({},t(e)),{_ctx:e})))._current}function n(e,t){return e._useGPUResource(t)}function u(e,t,r){t._useGPUUpdate(e,r)}(e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})})(e);class c{constructor(e){this._renders=[],this._canvasContext=e}addRender(e){this._renders.includes(e)||this._renders.push(e)}outputFrame(e){const t=this._canvasContext.getCurrentTexture();this._renders.forEach((r=>{r.renderTarget.setAndNotify(t),r.runFrame(e,[r.renderTarget])}))}}function o(e){const r=t(e),c=n(e,(e=>e.device.createBuffer({size:144,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST})));return u([c],e,(e=>{if(!c.current)return;var t=0,n=1,u=0,o=1;r.current&&(r.current<1?o=1-(u=.5-.5*r.current):n=1-(t=.5-.5/r.current));const i=new Float32Array([1,1,0,1,n,u,-1,-1,0,1,t,o,-1,1,0,1,t,u,1,1,0,1,n,u,1,-1,0,1,n,o,-1,-1,0,1,t,o]);e.device.queue.writeBuffer(c.current,0,i,0,i.length)})),{aspectFillRatio:r,vertexSourceCount:6,vertexSourceTotalBytes:144,vertexSourceStrideBytes:24,vertexSourceXYZWOffsetBytes:0,vertexSourceUVOffsetBytes:16,vertexSourceAsGPUBuffer:c}}function i(e){const{textureSource:c,vertexSource:i,renderTarget:s}=function(e){const r=t(e),c=t(e),o=t(e),i=t(e),s=n(e,(e=>e.device.createShaderModule({code:"@group(0) @binding(0) var<uniform> use_matrix: mat4x4<f32>;\n@group(0) @binding(1) var use_sampler: sampler;\n@group(0) @binding(2) var use_texture: texture_2d<f32>;\n\nstruct VertexOutput {\n  @builtin(position) pos: vec4<f32>;\n  @location(0) uv: vec2<f32>;\n}\n\n@stage(vertex)\nfn vertexRenderUV(\n  @location(0) pos_in: vec4<f32>,\n  @location(1) uv_in: vec2<f32>,\n) ->\n  VertexOutput\n{\n  var out: VertexOutput;\n  out.pos = pos_in;\n  out.uv = uv_in;\n  return out;\n}\n\n@stage(vertex)\nfn vertexRenderUVWithMatrix(\n  @location(0) pos_in: vec4<f32>,\n  @location(1) uv_in: vec2<f32>,\n) ->\n  VertexOutput\n{\n  var out: VertexOutput;\n  out.pos = use_matrix * pos_in;\n  out.uv = uv_in;\n  return out;\n}\n\n@stage(fragment)\nfn fragmentRenderUV(\n  @location(0) uv_in : vec2<f32>\n) ->\n  @location(0) vec4<f32>\n{\n  return textureSample(use_texture, use_sampler, uv_in.xy);\n}\n"}))),a=n(e,(e=>{var t;if(c.current)return e.device.createRenderPipeline({vertex:{module:s.current,entryPoint:(null===(t=r.current)||void 0===t?void 0:t.cameraSourceAsGPUBuffer)?"vertexRenderUVWithMatrix":"vertexRenderUV",buffers:[{arrayStride:c.current.vertexSourceStrideBytes,attributes:[{shaderLocation:0,offset:c.current.vertexSourceXYZWOffsetBytes,format:"float32x4"},{shaderLocation:1,offset:c.current.vertexSourceUVOffsetBytes,format:"float32x2"}]}]},fragment:{module:s.current,entryPoint:"fragmentRenderUV",targets:[{format:"rgba8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"},layout:void 0})})),d=n(e,(e=>e.device.createSampler({magFilter:"linear",minFilter:"linear"}))),l=n(e,(e=>{var t,n,u,c;if(!a.current)return;if(!(null===(t=o.current)||void 0===t?void 0:t.textureSourceAsGPUTexture.current))return;const i=[{binding:1,resource:d.current},{binding:2,resource:null===(n=o.current)||void 0===n?void 0:n.textureSourceAsGPUTexture.current.createView()}];return(null===(u=r.current)||void 0===u?void 0:u.cameraSourceAsGPUBuffer)&&i.unshift({binding:0,resource:{buffer:null===(c=r.current)||void 0===c?void 0:c.cameraSourceAsGPUBuffer.current}}),e.device.createBindGroup({layout:a.current.getBindGroupLayout(0),entries:i})})),f=n(e,(e=>e.device.createTexture({size:[300,300],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})));return u([i],e,(e=>{var t,n;if(null===(t=r.current)||void 0===t||t.cameraSourceAsGPUBuffer.current,null===(n=o.current)||void 0===n||n.textureSourceAsGPUTexture.current,!c.current)return;if(!i.current)return;if(!a.current)return;if(!l.current)return;const u=e.commandEncoder.beginRenderPass({colorAttachments:[{view:i.current.createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:f.current.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}});u.setPipeline(a.current),u.setVertexBuffer(0,c.current.vertexSourceAsGPUBuffer.current),u.setBindGroup(0,l.current),u.draw(c.current.vertexSourceCount,1,0,0),u.end()})),{cameraSource:r,textureSource:o,vertexSource:c,renderTarget:i}}(e),a=r(e,o);return i.set(a),a.aspectFillRatio.set(850/1275),{textureSource:c,renderTarget:s}}function s(e){const r=t(e),c=t(e),o=n(e,(e=>{var t,r;return(null===(t=c.current)||void 0===t?void 0:t.byteLength)&&e.device.createBuffer({size:null===(r=c.current)||void 0===r?void 0:r.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST})}));u([o],e,(e=>{o.current&&c.current&&e.device.queue.writeBuffer(o.current,0,c.current,0,c.current.length)}));const i=n(e,(e=>{var t;let r;if(10===(null===(t=c.current)||void 0===t?void 0:t.length))return r="@group(0) @binding(0) var<uniform> kernel_3x3: Kernel3x3;\n@group(0) @binding(1) var texture_in: texture_2d<f32>;\n@group(0) @binding(2) var texture_out: texture_storage_2d<rgba8unorm, write>;\n\nstruct Kernel3x3 {\n  bias: f32;\n  aa: f32;\n  ba: f32;\n  ca: f32;\n  ab: f32;\n  bb: f32;\n  cb: f32;\n  ac: f32;\n  bc: f32;\n  cc: f32;\n}\n\n// TODO: What is the most likely optimal workgroup size?\n@stage(compute) @workgroup_size(32, 1, 1)\nfn computeTextureFilterConvolve3x3(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  let b = vec2<i32>(global_id.xy);\n  let a = max(b - 1, vec2<i32>(0));\n  let c = min(b + 1, min(\n    textureDimensions(texture_in),\n    textureDimensions(texture_out),\n  ));\n\n  var sum = vec4<f32>(kernel_3x3.bias);\n\n  sum = sum + kernel_3x3.aa * textureLoad(texture_in, vec2<i32>(a.x, a.y), 0);\n  sum = sum + kernel_3x3.ba * textureLoad(texture_in, vec2<i32>(b.x, a.y), 0);\n  sum = sum + kernel_3x3.ca * textureLoad(texture_in, vec2<i32>(c.x, a.y), 0);\n\n  sum = sum + kernel_3x3.ab * textureLoad(texture_in, vec2<i32>(a.x, b.y), 0);\n  sum = sum + kernel_3x3.bb * textureLoad(texture_in, vec2<i32>(b.x, b.y), 0);\n  sum = sum + kernel_3x3.cb * textureLoad(texture_in, vec2<i32>(c.x, b.y), 0);\n\n  sum = sum + kernel_3x3.ac * textureLoad(texture_in, vec2<i32>(a.x, c.y), 0);\n  sum = sum + kernel_3x3.bc * textureLoad(texture_in, vec2<i32>(b.x, c.y), 0);\n  sum = sum + kernel_3x3.cc * textureLoad(texture_in, vec2<i32>(c.x, c.y), 0);\n\n  textureStore(texture_out, b, sum);\n}\n",e.device.createComputePipeline({compute:{module:e.device.createShaderModule({code:"@group(0) @binding(0) var<uniform> kernel_3x3: Kernel3x3;\n@group(0) @binding(1) var texture_in: texture_2d<f32>;\n@group(0) @binding(2) var texture_out: texture_storage_2d<rgba8unorm, write>;\n\nstruct Kernel3x3 {\n  bias: f32;\n  aa: f32;\n  ba: f32;\n  ca: f32;\n  ab: f32;\n  bb: f32;\n  cb: f32;\n  ac: f32;\n  bc: f32;\n  cc: f32;\n}\n\n// TODO: What is the most likely optimal workgroup size?\n@stage(compute) @workgroup_size(32, 1, 1)\nfn computeTextureFilterConvolve3x3(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  let b = vec2<i32>(global_id.xy);\n  let a = max(b - 1, vec2<i32>(0));\n  let c = min(b + 1, min(\n    textureDimensions(texture_in),\n    textureDimensions(texture_out),\n  ));\n\n  var sum = vec4<f32>(kernel_3x3.bias);\n\n  sum = sum + kernel_3x3.aa * textureLoad(texture_in, vec2<i32>(a.x, a.y), 0);\n  sum = sum + kernel_3x3.ba * textureLoad(texture_in, vec2<i32>(b.x, a.y), 0);\n  sum = sum + kernel_3x3.ca * textureLoad(texture_in, vec2<i32>(c.x, a.y), 0);\n\n  sum = sum + kernel_3x3.ab * textureLoad(texture_in, vec2<i32>(a.x, b.y), 0);\n  sum = sum + kernel_3x3.bb * textureLoad(texture_in, vec2<i32>(b.x, b.y), 0);\n  sum = sum + kernel_3x3.cb * textureLoad(texture_in, vec2<i32>(c.x, b.y), 0);\n\n  sum = sum + kernel_3x3.ac * textureLoad(texture_in, vec2<i32>(a.x, c.y), 0);\n  sum = sum + kernel_3x3.bc * textureLoad(texture_in, vec2<i32>(b.x, c.y), 0);\n  sum = sum + kernel_3x3.cc * textureLoad(texture_in, vec2<i32>(c.x, c.y), 0);\n\n  textureStore(texture_out, b, sum);\n}\n"}),entryPoint:"computeTextureFilterConvolve3x3"},layout:void 0})})),s=n(e,(e=>{var t,n,u,c;return e.device.createTexture({format:"rgba8unorm",size:{width:(null===(n=null===(t=r.current)||void 0===t?void 0:t.textureSourceAsGPUTexture.current)||void 0===n?void 0:n.width)||850,height:(null===(c=null===(u=r.current)||void 0===u?void 0:u.textureSourceAsGPUTexture.current)||void 0===c?void 0:c.height)||1275},usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING})})),a=n(e,(e=>{var t,n,u;return i.current&&o.current&&(null===(t=r.current)||void 0===t?void 0:t.textureSourceAsGPUTexture.current)&&s.current&&e.device.createBindGroup({layout:i.current.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:o.current}},{binding:1,resource:null===(u=null===(n=r.current)||void 0===n?void 0:n.textureSourceAsGPUTexture.current)||void 0===u?void 0:u.createView()},{binding:2,resource:s.current.createView()}]})}));return u([s],e,(e=>{var t,n,u,c,s;if(o.current,!(null===(t=r.current)||void 0===t?void 0:t.textureSourceAsGPUTexture.current))return;if(!i.current)return;if(!a.current)return;const d=e.commandEncoder.beginComputePass();d.setPipeline(i.current),d.setBindGroup(0,a.current),d.dispatch(((null===(u=null===(n=r.current)||void 0===n?void 0:n.textureSourceAsGPUTexture.current)||void 0===u?void 0:u.width)||850)/32,((null===(s=null===(c=r.current)||void 0===c?void 0:c.textureSourceAsGPUTexture.current)||void 0===s?void 0:s.height)||1275)/1),d.end()})),{textureSource:r,setKernel3x3:function(e,t,r,n={}){var u,o;if(n.scale||n.normalize){var i=null!==(u=n.scale)&&void 0!==u?u:1;if(n.normalize){var s=0;s=e.reduce(((e,t)=>e+t),s),s=t.reduce(((e,t)=>e+t),s),0!==(s=r.reduce(((e,t)=>e+t),s))&&(i/=s)}1!==i&&(e=e.map((e=>e*i)),t=t.map((e=>e*i)),r=r.map((e=>e*i)))}const a=new Float32Array(10);a[0]=null!==(o=n.bias)&&void 0!==o?o:0,a.set(e,1),a.set(t,4),a.set(r,7),c.set(a)},textureSourceAsGPUTexture:s}}function a(e){const{imageBitmap:r,label:c,textureSourceAsGPUTexture:o}=function(e){const r=t(e),c=t(e),o=n(e,(e=>{if(r.current)return e.device.createTexture({label:c.current,size:[r.current.width,r.current.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT})}));return u([o],e,(e=>{r.current&&o.current&&e.device.queue.copyExternalImageToTexture({source:r.current},{texture:o.current},[r.current.width,r.current.height])})),{imageBitmap:r,label:c,textureSourceAsGPUTexture:o}}(e),i=c;return function(e,t){e._useEffect((e=>{const t=i.current;if(console.log({currentURL:t}),!t)return()=>{};var n=!1;const u=document.createElement("img");return u.src=t,u.decode().then((()=>n?void 0:createImageBitmap(u))).then((e=>{!n&&e&&r.set(e)})).catch(console.error),()=>{n=!0}}))}(e),{url:i,textureSourceAsGPUTexture:o}}class d{constructor(e,t){this._changeAtNextTick=!1,this._changedClockNumber=0,this._producedClockNumber=0,this._producerOperations=[],this._current=e,this._next=e,this._ctx=t}_attachProducerOperation(e){this._producerOperations.push(e)}_runIfNeededAt(e){return this._changeAtNextTick?(this._current=this._next,this._changeAtNextTick=!1,this._changedClockNumber=e,!0):this._changedClockNumber>=e}_produceIfNeededAt(e){this._producedClockNumber>=e||(this._producerOperations.forEach((t=>t._produceIfNeededAt(e))),this._producedClockNumber=e)}get current(){const e=this._ctx._currentAction;if(!e)throw new Error("It's only possible to read properties from within a reactive context");return e._attachDependency(this),this._current}getNonReactively(){return this._current}get readOnly(){return this}set(e){this._current!==e&&this.setAndNotify(e)}setAndNotify(e){this._next=e,this.notify()}change(e){this.set(e(this._current))}mutate(e){e(this._current),this.notify()}notify(){this._changeAtNextTick=!0}}class l{constructor(e,t){this._deps=new Set,this._cachedClockNumber=0,this._producedClockNumber=0,this._producerOperations=[],this._ctx=e,this._fn=t}_attachDependency(e){this._deps.add(e)}_attachProducerOperation(e){this._producerOperations.push(e)}_runIfNeededAt(e){if(this._cachedClockNumber>=e)return!0;var t=!1;if(this._deps.forEach((r=>{r._runIfNeededAt(e)&&(t=!0)})),!t&&this._cachedClockNumber>0)return!1;const r=this._ctx._currentAction;this._ctx._currentAction=this;const n=this._cachedResult;return"object"==typeof n&&"destroy"in n&&"function"==typeof n.destroy&&n.destroy(),this._cachedResult=this._fn(this._ctx),this._cachedClockNumber=e,this._ctx._currentAction=r,!0}_produceIfNeededAt(e){this._producedClockNumber>=e||(this._producerOperations.forEach((t=>t._produceIfNeededAt(e))),this._producedClockNumber=e)}get current(){const e=this._ctx._currentAction;if(!e)throw new Error("It's only possible to read properties from within a reactive context");return e._attachDependency(this),this._runIfNeededAt(this._ctx._currentClockNumber),this._cachedResult}getNonReactively(){return this._cachedResult}}class f{constructor(e,t){this._deps=new Set,this._producedClockNumber=0,this._ctx=e,this._fn=t}_attachDependency(e){this._deps.add(e)}_produceIfNeededAt(e){if(this._producedClockNumber>=e)return;this._producedClockNumber=e,this._deps.forEach((t=>t._runIfNeededAt(e))),this._deps.forEach((t=>t._produceIfNeededAt(e)));const t=this._ctx._currentAction;this._ctx._currentAction=this,this._fn(this._ctx),this._ctx._currentAction=t}}class x{constructor(e,t){this._deps=new Set,this._lastClockNumber=0,this._ctx=e,this._fn=t}_attachDependency(e){this._deps.add(e)}_runIfNeededAt(e){if(this._lastClockNumber>=e)return!0;var t=!1;if(this._deps.forEach((r=>{r._runIfNeededAt(e)&&(t=!0)})),!t&&this._lastClockNumber>0)return!1;const r=this._lastCancelFn;r&&r();const n=this._ctx._currentAction;this._ctx._currentAction=this,this._lastCancelFn=this._fn(this._ctx),this._ctx._currentAction=n,this._lastClockNumber=e}}class _{constructor(e){this._currentClockNumber=1,this._effects=[],this._device=e}get commandEncoder(){return this._commandEncoder}get device(){return this._device}_useProp(e){return new d("function"==typeof e?e():e,this)}_useGPUResource(e){return new l(this,e)}_useGPUUpdate(e,t){const r=new f(this,t);e.forEach((e=>e._attachProducerOperation(r)))}_useEffect(e){this._effects.push(new x(this,e))}}var h=function(e,t,r,n){return new(r||(r=Promise))((function(u,c){function o(e){try{s(n.next(e))}catch(e){c(e)}}function i(e){try{s(n.throw(e))}catch(e){c(e)}}function s(e){var t;e.done?u(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,i)}s((n=n.apply(e,t||[])).next())}))};function v(){var e,t;const r=null===(t=null===(e=navigator.gpu)||void 0===e?void 0:e.getPreferredCanvasFormat)||void 0===t?void 0:t.bind(navigator.gpu);return r?r():"rgba8unorm"}var m;return m=e=>{const t=r(e,a);t.url.set("./assets/fireweed.jpg");const n=r(e,s);n.textureSource.set(t),n.setKernel3x3([1,2,1],[0,0,0],[-1,-2,-1],{scale:.5,bias:.5});const u=r(e,i),{renderTarget:c}=u;return function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var u=0;for(n=Object.getOwnPropertySymbols(e);u<n.length;u++)t.indexOf(n[u])<0&&Object.prototype.propertyIsEnumerable.call(e,n[u])&&(r[n[u]]=e[n[u]])}return r}(u,["renderTarget"]).textureSource.set(n),{renderTarget:c}},function(e){(()=>h(this,void 0,void 0,(function*(){const e=yield function(e="high-performance"){return h(this,void 0,void 0,(function*(){if(!navigator.gpu)throw new Error("Your browser doesn't have WebGPU enabled!");const t=yield navigator.gpu.requestAdapter({powerPreference:e});if(!t)throw new Error("Failed to get the GPU adapter!");return t.requestDevice()}))}(),t=yield function(e,t){return h(this,void 0,void 0,(function*(){const r=e.getContext("webgpu");if(!r)throw new Error("Failed to get a WebGPU canvas context!");return r.configure({device:t,format:v(),alphaMode:"opaque"}),r}))}(function(){const e=document.querySelector("canvas.main");if(!e)throw new Error("The main canvas wasn't found in the HTML!");return e}(),e),r=((e,t)=>{const r=function(e,t){const r=new _(e),n=Object.assign(Object.assign({},t(r)),{_ctx:r});return n.runFrame=(e,t)=>{r._currentClockNumber+=1,r._commandEncoder=e;const n=r._currentClockNumber;t.forEach((e=>e._produceIfNeededAt(n))),r._effects.forEach((e=>e._runIfNeededAt(n))),r._commandEncoder=void 0},n}(e,m),n=new c(t);return n.addRender(r),function(e){n.outputFrame(e)}})(e,t);requestAnimationFrame((function t(){!function(e,t){const r=e.createCommandEncoder();t(r),e.queue.submit([r.finish()])}(e,r),requestAnimationFrame(t)}))})))().catch((e=>{document.querySelector("body").innerHTML=e,console.error(e)}))}(),e})()));
//# sourceMappingURL=demo3.js.map