{"version":3,"file":"demo1.js","mappings":"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","sources":["webpack://beta/webpack/universalModuleDefinition","webpack://beta/webpack/bootstrap","webpack://beta/webpack/runtime/make namespace object","webpack://beta/../gpu-fu/src/Property.ts","webpack://beta/../gpu-fu/src/Derived.ts","webpack://beta/../gpu-fu/src/Operation.ts","webpack://beta/../gpu-fu/src/Effect.ts","webpack://beta/../gpu-fu/src/Context.ts","webpack://beta/../incubator/src/OutputCanvas.ts","webpack://beta/../incubator/src/VertexSourceRect.ts","webpack://beta/../incubator/src/VertexSourceIcosahedron.ts","webpack://beta/./src/runDemo.ts","webpack://beta/./src/demo1.wgsl","webpack://beta/./src/demo1.ts","webpack://beta/../gpu-fu/src/hooks.ts","webpack://beta/../gpu-fu/src/Unit.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"beta\"] = factory();\n\telse\n\t\troot[\"beta\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ContextImplementation } from \"./Context\"\nimport { Operation } from \"./Operation\"\n\nexport type Property<T> = Pick<\n  PropertyImplementation<T>,\n  | \"current\"\n  | \"getNonReactively\"\n  | \"readOnly\"\n  | \"setFrom\"\n  | \"set\"\n  | \"setAndNotify\"\n  | \"change\"\n  | \"mutate\"\n  | \"_runIfNeededAt\"\n  | \"_produceIfNeededAt\"\n  | \"_attachProducerOperation\"\n>\n\nexport type PropertyReadOnly<T> = Pick<\n  PropertyImplementation<T>,\n  | \"current\"\n  | \"getNonReactively\"\n  | \"_runIfNeededAt\"\n  | \"_produceIfNeededAt\"\n  | \"_attachProducerOperation\"\n>\n\nexport class PropertyImplementation<T> implements Property<T> {\n  private _ctx: ContextImplementation\n  _current: T // TODO: private\n  private _next: T\n  private _changeAtNextTick = false\n  private _changedClockNumber = 0\n  private _producedClockNumber = 0\n  private _producerOperations: Operation[] = []\n  private _readingFrom?: PropertyReadOnly<T>\n\n  constructor(initialValue: T, ctx: ContextImplementation) {\n    this._current = initialValue\n    this._next = initialValue\n    this._ctx = ctx\n  }\n\n  _attachProducerOperation(op: Operation): void {\n    this._producerOperations.push(op)\n  }\n\n  _runIfNeededAt(clockNumber: number): boolean {\n    const readingFrom = this._readingFrom\n    if (readingFrom && !this._changeAtNextTick)\n      return readingFrom._runIfNeededAt(clockNumber)\n\n    if (!this._changeAtNextTick) return this._changedClockNumber >= clockNumber\n\n    delete this._readingFrom\n    this._current = this._next\n    this._changeAtNextTick = false\n    this._changedClockNumber = clockNumber\n\n    return true\n  }\n\n  _produceIfNeededAt(clockNumber: number): boolean {\n    if (this._producedClockNumber >= clockNumber) return true\n\n    var depsChanged = false\n    if (this._readingFrom?._produceIfNeededAt(clockNumber)) depsChanged = true\n    this._producerOperations.forEach((op) => {\n      if (op._produceIfNeededAt(clockNumber)) depsChanged = true\n    })\n\n    if (\n      !depsChanged &&\n      this._changedClockNumber < clockNumber &&\n      this._producedClockNumber > 0\n    )\n      return false\n\n    this._producedClockNumber = clockNumber\n    return true\n  }\n\n  // Get the current value of the property.\n  //\n  // This can only be accessed from within a reactive context,\n  // since it implies that you want to track the property as a dependency\n  // dependency that will cause the reactive context to be called again.\n  // To get the current value non-reactively, call `getNonReactively` instead.\n  get current(): T {\n    const currentAction = this._ctx._currentAction\n    if (!currentAction)\n      throw new Error(\n        \"It's only possible to read properties from within a reactive context\",\n      )\n    currentAction._attachDependency(this)\n\n    const readingFrom = this._readingFrom\n    if (readingFrom) return readingFrom.current\n\n    return this._current\n  }\n\n  // Get the current value of the property without dependency tracking.\n  // Unlike the `current` getter, this can be called anywhere,\n  // both in contexts which are reactive and non-reactive.\n  // But if called in a reactive context, there is no dependency link created.\n  getNonReactively(): T {\n    const readingFrom = this._readingFrom\n    if (readingFrom) return readingFrom.getNonReactively()\n\n    return this._current\n  }\n\n  // Get a version of this property accessor that can only read (in TypeScript).\n  get readOnly(): PropertyReadOnly<T> {\n    return this\n  }\n\n  // TODO: Document\n  setFrom(other: PropertyReadOnly<T>) {\n    this._readingFrom = other\n  }\n\n  // Assign a new value to the property, notifying any reactive effects if\n  // (and only if) the new value is not referentially identical to the old one.\n  //\n  // Use `setAndNotify` instead if you want to unconditionally notify all\n  // downstream reactive effects even if the new value is the same.\n  set(newValue: T) {\n    if (this._current !== newValue) {\n      this._next = newValue\n      this.notify()\n    }\n  }\n\n  // Assign a new value to the property, notifying all reactive effects,\n  // regardless of whether the new value is referentially identical to the old.\n  //\n  // Usually you want to use `set` instead, which checks referential identity.\n  setAndNotify(newValue: T) {\n    this._next = newValue\n    this.notify()\n  }\n\n  // Use a function to change the value of the property based on the current\n  // value (which will be passed as the argument to the function).\n  //\n  // All reactive effects will be notified if (and only if) the new value\n  // produced by the function is not referentially identical to the old value.\n  //\n  // Use `mutate` instead if the value is an object type that you want to mutate\n  // to change it and trigger reactive effects without actually having to\n  // produce a new referentially new object for the new value.\n  change(fn: (currentValue: T) => T) {\n    if (this._readingFrom)\n      throw new Error(\n        \"changing a property that was set from another property is not yet supported\",\n      )\n    this.set(fn(this._current))\n  }\n\n  // Use a function to mutate the current value of the property,\n  // without changing its referential identity.\n  //\n  // All reactive effects will be notified regardless of what the function does.\n  mutate(fn: (currentValue: T) => unknown) {\n    if (this._readingFrom)\n      throw new Error(\n        \"mutating a property that was set from another property is not yet supported\",\n      )\n    fn(this._current)\n    this.notify() // assume mutation always happens\n  }\n\n  private notify() {\n    this._changeAtNextTick = true\n  }\n}\n","import { ContextImplementation } from \"./Context\"\nimport { Operation } from \"./Operation\"\nimport { PropertyReadOnly } from \"./Property\"\n\nexport type Derived<T> = PropertyReadOnly<T>\n\nexport class DerivedImplementation<T> implements Derived<T> {\n  _ctx: ContextImplementation\n  _fn: (ctx: unknown) => T\n  _deps = new Set<PropertyReadOnly<unknown>>()\n  _cachedResult?: T\n  _cachedClockNumber: number = 0\n  _producedClockNumber = 0\n  _producerOperations: Operation[] = []\n\n  constructor(ctx: ContextImplementation, fn: (ctx: unknown) => T) {\n    this._ctx = ctx\n    this._fn = fn\n  }\n\n  _attachDependency(dep: PropertyReadOnly<unknown>): void {\n    this._deps.add(dep)\n  }\n\n  _attachProducerOperation(op: Operation): void {\n    this._producerOperations.push(op)\n  }\n\n  _runIfNeededAt(clockNumber: number): boolean {\n    if (this._cachedClockNumber >= clockNumber) return true\n\n    var depsChanged = false\n    this._deps.forEach((dep) => {\n      if (dep._runIfNeededAt(clockNumber)) depsChanged = true\n    })\n    if (!depsChanged && this._cachedClockNumber > 0) return false\n\n    const outerAction = this._ctx._currentAction\n    this._ctx._currentAction = this\n\n    // Run the destroy method of the previous result to clean up if applicable.\n    const previousResult = this._cachedResult\n    if (\n      typeof previousResult === \"object\" &&\n      \"destroy\" in previousResult &&\n      typeof (previousResult as any).destroy === \"function\"\n    ) {\n      ;(previousResult as any).destroy()\n    }\n\n    this._cachedResult = this._fn(this._ctx)\n    this._cachedClockNumber = clockNumber\n\n    this._ctx._currentAction = outerAction\n\n    return true\n  }\n\n  _produceIfNeededAt(clockNumber: number) {\n    if (this._producedClockNumber >= clockNumber) return true\n\n    var depsChanged = false\n    this._deps.forEach((dep) => {\n      if (dep._produceIfNeededAt(clockNumber)) depsChanged = true\n    })\n    this._producerOperations.forEach((op) => {\n      if (op._produceIfNeededAt(clockNumber)) depsChanged = true\n    })\n    if (!depsChanged && this._producedClockNumber > 0) return false\n\n    this._producedClockNumber = clockNumber\n    return true\n  }\n\n  get current(): T {\n    const currentDerived = this._ctx._currentAction\n    if (!currentDerived)\n      throw new Error(\n        \"It's only possible to read properties from within a reactive context\",\n      )\n    currentDerived._attachDependency(this)\n\n    this._runIfNeededAt(this._ctx._currentClockNumber)\n\n    return this._cachedResult as T\n  }\n\n  getNonReactively(): T {\n    return this._cachedResult as T\n  }\n}\n","import { ContextImplementation } from \"./Context\"\nimport { PropertyReadOnly } from \"./Property\"\n\nexport type Operation = Pick<\n  OperationImplementation,\n  \"_produceIfNeededAt\" | \"_attachDependency\"\n>\n\nexport class OperationImplementation implements Operation {\n  _ctx: ContextImplementation\n  _fn: (ctx: unknown) => void\n  _deps = new Set<PropertyReadOnly<unknown>>()\n  _producedClockNumber: number = 0\n\n  constructor(ctx: ContextImplementation, fn: (ctx: unknown) => void) {\n    this._ctx = ctx\n    this._fn = fn\n  }\n\n  _attachDependency(dep: PropertyReadOnly<unknown>): void {\n    this._deps.add(dep)\n  }\n\n  _produceIfNeededAt(clockNumber: number): boolean {\n    if (this._producedClockNumber >= clockNumber) return false\n    const originalClockNumber = this._producedClockNumber\n    this._producedClockNumber = clockNumber\n\n    var depsChanged = false\n    this._deps.forEach((op) => {\n      if (op._runIfNeededAt(clockNumber)) depsChanged = true\n    })\n    this._deps.forEach((op) => {\n      if (op._produceIfNeededAt(clockNumber)) depsChanged = true\n    })\n    if (!depsChanged && originalClockNumber > 0) return false\n\n    const outerAction = this._ctx._currentAction\n    this._ctx._currentAction = this\n\n    this._fn(this._ctx)\n\n    this._ctx._currentAction = outerAction\n\n    return true\n  }\n}\n","import { ContextImplementation } from \"./Context\"\nimport { PropertyReadOnly } from \"./Property\"\n\nexport type Effect = Pick<\n  EffectImplementation,\n  \"_attachDependency\" | \"_runIfNeededAt\"\n>\n\nexport class EffectImplementation implements Effect {\n  _ctx: ContextImplementation\n  _fn: (ctx: unknown) => (() => {}) | undefined\n  _deps = new Set<PropertyReadOnly<unknown>>()\n  _lastCancelFn?: () => {}\n  _lastClockNumber = 0\n\n  constructor(\n    ctx: ContextImplementation,\n    fn: (ctx: unknown) => (() => {}) | undefined,\n  ) {\n    this._ctx = ctx\n    this._fn = fn\n  }\n\n  _attachDependency(dep: PropertyReadOnly<unknown>): void {\n    this._deps.add(dep)\n  }\n\n  _runIfNeededAt(clockNumber: number) {\n    if (this._lastClockNumber >= clockNumber) return true\n\n    var depsChanged = false\n    this._deps.forEach((dep) => {\n      if (dep._runIfNeededAt(clockNumber)) depsChanged = true\n    })\n    if (!depsChanged && this._lastClockNumber > 0) return false\n\n    const lastCancelFn = this._lastCancelFn\n    if (lastCancelFn) lastCancelFn()\n\n    const outerAction = this._ctx._currentAction\n    this._ctx._currentAction = this\n\n    this._lastCancelFn = this._fn(this._ctx)\n\n    this._ctx._currentAction = outerAction\n    this._lastClockNumber = clockNumber\n  }\n}\n","/// <reference types=\"@webgpu/types\" />\n\nimport { Unit } from \"./Unit\"\nimport { Property, PropertyImplementation, PropertyReadOnly } from \"./Property\"\nimport { Derived, DerivedImplementation } from \"./Derived\"\nimport { OperationImplementation } from \"./Operation\"\nimport { EffectImplementation } from \"./Effect\"\nimport { Effect } from \"./Effect\"\n\nexport type MaybeDestroyableGPUResource =\n  | undefined\n  | 0\n  | false\n  | null\n  | (GPUObjectBase & { destroy?: () => void })\n\ntype AttachDependency = Pick<\n  DerivedImplementation<unknown>,\n  \"_attachDependency\"\n>\n\nexport class ContextImplementation {\n  _currentAction?: AttachDependency\n  _currentClockNumber: number = 1\n\n  _effects: Effect[] = []\n\n  _device: GPUDevice\n  _commandEncoder?: GPUCommandEncoder\n\n  constructor(device: GPUDevice) {\n    // TODO: Remove this polyfill when Chromium is working properly.\n    // Current versions of Chromium on Linux leave these properties undefined,\n    // even though the type declarations say they are mandatory properties.\n    const originalCreateBuffer = device.createBuffer.bind(device)\n    ;(device as any).createBuffer = (descriptor: GPUBufferDescriptor) => {\n      const result = originalCreateBuffer(descriptor)\n      ;(result as any).size = descriptor.size\n      ;(result as any).usage = descriptor.usage\n      return result\n    }\n\n    // TODO: Remove this polyfill when Chromium is working properly.\n    // Current versions of Chromium on Linux leave these properties undefined,\n    // even though the type declarations say they are mandatory properties.\n    const originalCreateTexture = device.createTexture.bind(device)\n    ;(device as any).createTexture = (descriptor: GPUTextureDescriptor) => {\n      const result = originalCreateTexture(descriptor)\n      ;(result as any).width = (descriptor.size as any).width\n      ;(result as any).height = (descriptor.size as any).height\n      ;(result as any).format = descriptor.format\n      return result\n    }\n\n    this._device = device\n  }\n\n  get commandEncoder(): GPUCommandEncoder | undefined {\n    return this._commandEncoder\n  }\n\n  get device(): GPUDevice {\n    return this._device\n  }\n\n  _useProp<T>(initialValue: (() => T) | T): Property<T> {\n    return new PropertyImplementation<T>(\n      typeof initialValue === \"function\"\n        ? (initialValue as () => T)()\n        : initialValue,\n      this,\n    )\n  }\n\n  _useGPUResource<T extends MaybeDestroyableGPUResource>(\n    fn: (ctx: ContextForGPUResource) => T,\n  ): Derived<T> {\n    return new DerivedImplementation<T>(this, fn as any)\n  }\n\n  _useGPUUpdate(\n    producedProps: PropertyReadOnly<unknown>[],\n    fn: (ctx: ContextForGPUAction) => void,\n  ) {\n    const op = new OperationImplementation(this, fn as any)\n\n    producedProps.forEach((prop) => prop._attachProducerOperation(op))\n  }\n\n  _useEffect(fn: (ctx: ContextEmpty) => (() => void) | undefined) {\n    this._effects.push(new EffectImplementation(this, fn as any))\n  }\n\n  _useDerived<T>(fn: (ctx: ContextEmpty) => T): Derived<T> {\n    return new DerivedImplementation<T>(this, fn as any)\n  }\n}\n\nexport type Context = Pick<\n  ContextImplementation,\n  // In the main function context, hooks are available.\n  | \"device\"\n  | \"_useProp\"\n  | \"_useGPUResource\"\n  | \"_useGPUUpdate\"\n  | \"_useEffect\"\n  | \"_useDerived\"\n>\n\nexport type ContextForGPUResource = Pick<\n  ContextImplementation,\n  // No hooks are available.\n  \"device\"\n>\n\nexport type ContextForGPUAction = Pick<\n  ContextImplementation,\n  // No hooks are available, but a command encoder is available.\n  \"device\"\n> & { commandEncoder: GPUCommandEncoder }\n\nexport type ContextEmpty = {}\n","/// <reference types=\"@webgpu/types\" />\n\nimport { Render, UnitRoot } from \"@gpu-fu/gpu-fu\"\n\nexport default class OutputCanvas {\n  _canvasContext: GPUCanvasContext\n  _renders: UnitRoot<Render>[] = []\n\n  constructor(canvasContext: GPUCanvasContext) {\n    this._canvasContext = canvasContext\n  }\n\n  addRender(render: UnitRoot<Render>) {\n    if (this._renders.includes(render)) return\n    this._renders.push(render)\n  }\n\n  outputFrame(commandEncoder: GPUCommandEncoder) {\n    const target = this._canvasContext.getCurrentTexture()\n\n    // TODO: remove this polyfill when Chromium is working properly.\n    // Current versions of Chromium on Linux leave these properties undefined,\n    // even though the type declarations say they are mandatory properties.\n    ;(target as any).width = (this._canvasContext.canvas as any).width\n    ;(target as any).height = (this._canvasContext.canvas as any).height\n    ;(target as any).format = \"rgba8unorm\"\n\n    this._renders.forEach((render) => {\n      render.renderTarget.setAndNotify(target)\n      render.runFrame(commandEncoder, [render.renderTarget])\n    })\n  }\n}\n","/// <reference types=\"@webgpu/types\" />\n\nimport {\n  Context,\n  useProp,\n  useGPUUpdate,\n  useGPUResource,\n  VertexBufferLayout,\n} from \"@gpu-fu/gpu-fu\"\n\nconst resultVertexCount = 6\nconst resultVertexBufferLayout: VertexBufferLayout = {\n  xyzwOffsetBytes: 0,\n  uvOffsetBytes: 4 * Float32Array.BYTES_PER_ELEMENT,\n  strideBytes: 6 * Float32Array.BYTES_PER_ELEMENT,\n}\n\nexport default function VertexSourceRect(ctx: Context) {\n  const aspectFillRatio = useProp<number>(ctx)\n\n  const resultVertexBuffer = useGPUResource(ctx, (ctx) =>\n    ctx.device.createBuffer({\n      size: resultVertexCount * resultVertexBufferLayout.strideBytes,\n      usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n    }),\n  )\n\n  useGPUUpdate([resultVertexBuffer], ctx, (ctx) => {\n    if (!resultVertexBuffer.current) return\n\n    var uMin = 0\n    var uMax = 1\n    var vMin = 0\n    var vMax = 1\n\n    if (aspectFillRatio.current) {\n      if (aspectFillRatio.current < 1) {\n        vMin = 0.5 - 0.5 * aspectFillRatio.current\n        vMax = 1 - vMin\n      } else {\n        uMin = 0.5 - 0.5 / aspectFillRatio.current\n        uMax = 1 - uMin\n      }\n    }\n\n    // prettier-ignore\n    const data = new Float32Array([\n      // (x, y, z, w),  (u, v)\n          1, 1, 0, 1, uMax, vMin,\n         -1,-1, 0, 1, uMin, vMax,\n         -1, 1, 0, 1, uMin, vMin,\n          1, 1, 0, 1, uMax, vMin,\n          1,-1, 0, 1, uMax, vMax,\n         -1,-1, 0, 1, uMin, vMax,\n      ])\n\n    ctx.device.queue.writeBuffer(\n      resultVertexBuffer.current,\n      0,\n      data,\n      0,\n      data.length,\n    )\n  })\n\n  return {\n    aspectFillRatio,\n    resultVertexBuffer,\n    resultVertexBufferLayout,\n  }\n}\n","/// <reference types=\"@webgpu/types\" />\n\nimport {\n  Context,\n  useGPUResource,\n  useGPUUpdate,\n  VertexBufferLayout,\n} from \"@gpu-fu/gpu-fu\"\n\nconst resultVertexCount = 60\nconst resultVertexBufferLayout: VertexBufferLayout = {\n  xyzwOffsetBytes: 0,\n  uvOffsetBytes: 4 * Float32Array.BYTES_PER_ELEMENT,\n  strideBytes: 6 * Float32Array.BYTES_PER_ELEMENT,\n}\n\nexport default function VertexSourceIcosahedron(ctx: Context) {\n  const resultVertexBuffer = useGPUResource(ctx, (ctx) =>\n    ctx.device.createBuffer({\n      size: resultVertexCount * resultVertexBufferLayout.strideBytes,\n      usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n    }),\n  )\n\n  useGPUUpdate([resultVertexBuffer], ctx, (ctx) => {\n    if (!resultVertexBuffer.current) return\n\n    var uMin = 0\n    var uMax = 1\n    var vMin = 0\n    var vMax = 1\n\n    const t = (1 + Math.sqrt(5)) / 2\n\n    // prettier-ignore\n    const data = new Float32Array([\n    // (x, y, z, w),  (u, v)\n        t, 1, 0, 1, uMax, vMin, // v0\n        0, t, 1, 1, uMax, vMax, // v8\n        1, 0, t, 1, uMin, vMax, // v4\n\n        t, 1, 0, 1, uMax, vMin, // v0\n        1, 0, t, 1, uMax, vMax, // v4\n        t,-1, 0, 1, uMin, vMax, // v2\n\n        t, 1, 0, 1, uMax, vMin, // v0\n        t,-1, 0, 1, uMax, vMax, // v2\n        1, 0,-t, 1, uMin, vMax, // v5\n\n        t, 1, 0, 1, uMax, vMin, // v0\n        1, 0,-t, 1, uMax, vMax, // v5\n        0, t,-1, 1, uMin, vMax, // v10\n\n        t, 1, 0, 1, uMax, vMin, // v0\n        0, t,-1, 1, uMax, vMax, // v10\n        0, t, 1, 1, uMin, vMax, // v8\n\n       -1, 0, t, 1, uMax, vMin, // v1\n        1, 0, t, 1, uMax, vMax, // v4\n        0, t, 1, 1, uMin, vMax, // v8\n\n        0,-t, 1, 1, uMax, vMin, // v6\n        t,-1, 0, 1, uMax, vMax, // v2\n        1, 0, t, 1, uMin, vMax, // v4\n\n        0,-t,-1, 1, uMax, vMin, // v9\n        1, 0,-t, 1, uMax, vMax, // v5\n        t,-1, 0, 1, uMin, vMax, // v2\n\n       -1, 0,-t, 1, uMax, vMin, // v11\n        0, t,-1, 1, uMax, vMax, // v10\n        1, 0,-t, 1, uMin, vMax, // v5\n\n       -t, 1, 0, 1, uMax, vMin, // v7\n        0, t, 1, 1, uMax, vMax, // v8\n        0, t,-1, 1, uMin, vMax, // v10\n\n        1, 0, t, 1, uMax, vMin, // v4\n       -1, 0, t, 1, uMax, vMax, // v1\n        0,-t, 1, 1, uMin, vMax, // v6\n\n        t,-1, 0, 1, uMax, vMin, // v2\n        0,-t, 1, 1, uMax, vMax, // v6\n        0,-t,-1, 1, uMin, vMax, // v9\n\n        1, 0,-t, 1, uMax, vMin, // v5\n        0,-t,-1, 1, uMax, vMax, // v9\n       -1, 0,-t, 1, uMin, vMax, // v11\n\n        0, t,-1, 1, uMax, vMin, // v10\n       -1, 0,-t, 1, uMax, vMax, // v11\n       -t, 1, 0, 1, uMin, vMax, // v7\n\n        0, t, 1, 1, uMax, vMin, // v8\n       -t, 1, 0, 1, uMax, vMax, // v7\n       -1, 0, t, 1, uMin, vMax, // v1\n\n       -t,-1, 0, 1, uMax, vMin, // v3\n        0,-t, 1, 1, uMax, vMax, // v6\n       -1, 0, t, 1, uMin, vMax, // v1\n\n       -t,-1, 0, 1, uMax, vMin, // v3\n        0,-t,-1, 1, uMax, vMax, // v9\n        0,-t, 1, 1, uMin, vMax, // v6\n\n       -t,-1, 0, 1, uMax, vMin, // v3\n       -1, 0,-t, 1, uMax, vMax, // v11\n        0,-t,-1, 1, uMin, vMax, // v9\n\n       -t,-1, 0, 1, uMax, vMin, // v3\n       -t, 1, 0, 1, uMax, vMax, // v7\n       -1, 0,-t, 1, uMin, vMax, // v11\n\n       -t,-1, 0, 1, uMax, vMin, // v3\n       -1, 0, t, 1, uMax, vMax, // v1\n       -t, 1, 0, 1, uMin, vMax, // v7\n      ])\n\n    ctx.device.queue.writeBuffer(\n      resultVertexBuffer.current,\n      0,\n      data,\n      0,\n      data.length,\n    )\n  })\n\n  return {\n    resultVertexBuffer,\n    resultVertexBufferLayout,\n  }\n}\n","/// <reference types=\"@webgpu/types\" />\n\nimport { UnitFn, createUnitRoot, Render } from \"@gpu-fu/gpu-fu\"\nimport { OutputCanvas } from \"@gpu-fu/incubator\"\n\ntype FrameFn = (commandEncoder: GPUCommandEncoder) => void\ntype SetupFn = (device: GPUDevice, canvasContext: GPUCanvasContext) => FrameFn\n\nexport default function runDemo(renderFn: UnitFn<Render>) {\n  runDemoInner((device, canvasContext) => {\n    const render = createUnitRoot(device, renderFn)\n\n    const output = new OutputCanvas(canvasContext)\n    output.addRender(render)\n\n    return function frame(commandEncoder) {\n      output.outputFrame(commandEncoder)\n    }\n  })\n}\n\nfunction runDemoInner(setupFn: SetupFn) {\n  ;(async () => {\n    const device = await getDevice()\n    const canvasContext = await getCanvasContext(getDemoCanvas(), device)\n\n    const frameFn = setupFn(device, canvasContext)\n\n    function repeatFrameWithContext() {\n      runFrameWithContext(device, frameFn)\n      requestAnimationFrame(repeatFrameWithContext)\n    }\n    requestAnimationFrame(repeatFrameWithContext)\n  })().catch((error) => {\n    document.querySelector(\"body\")!.innerHTML = error\n    console.error(error)\n  })\n}\n\nasync function getDevice(\n  powerPreference: GPUPowerPreference = \"high-performance\",\n): Promise<GPUDevice> {\n  if (!navigator.gpu)\n    throw new Error(\"Your browser doesn't have WebGPU enabled!\")\n\n  const gpu = await navigator.gpu.requestAdapter({ powerPreference })\n  if (!gpu) throw new Error(\"Failed to get the GPU adapter!\")\n\n  return gpu.requestDevice()\n}\n\nexport function getDemoCanvas(): HTMLCanvasElement {\n  const canvas = document.querySelector(\n    \"canvas.main\",\n  ) as HTMLCanvasElement | null\n  if (!canvas) throw new Error(\"The main canvas wasn't found in the HTML!\")\n\n  return canvas\n}\n\nasync function getCanvasContext(\n  canvas: HTMLCanvasElement,\n  device: GPUDevice,\n): Promise<GPUCanvasContext> {\n  const canvasContext = canvas.getContext(\"webgpu\") as GPUCanvasContext | null\n  if (!canvasContext) throw new Error(\"Failed to get a WebGPU canvas context!\")\n\n  canvasContext.configure({\n    device,\n    format: getPreferredCanvasFormat(),\n    alphaMode: \"opaque\",\n    compositingAlphaMode: \"opaque\",\n  })\n\n  return canvasContext\n}\n\nfunction getPreferredCanvasFormat() {\n  // Some browsers throw an \"Illegal invocation\" error if we don't bind.\n  const getPreferredCanvasFormat =\n    navigator.gpu?.getPreferredCanvasFormat?.bind(navigator.gpu)\n  if (getPreferredCanvasFormat) return getPreferredCanvasFormat()\n\n  // Hard-coded default for browsers that don't implement this function yet.\n  return \"rgba8unorm\"\n}\n\nfunction runFrameWithContext(device: GPUDevice, frameFn: FrameFn) {\n  const commandEncoder = device.createCommandEncoder()\n  frameFn(commandEncoder)\n  device.queue.submit([commandEncoder.finish()])\n}\n","export default \"@stage(vertex)\\nfn vertexRenderColoredTriangle(\\n  @builtin(vertex_index) index: u32\\n) ->\\n  @builtin(position) vec4<f32>\\n{\\n  let triangle = array<vec2<f32>, 3>(\\n    vec2<f32>(0.0, 0.433),\\n    vec2<f32>(-0.5, -0.433),\\n    vec2<f32>(0.5, -0.433),\\n  );\\n\\n  return vec4<f32>(triangle[index], 0.0, 1.0);\\n}\\n\\n@stage(fragment)\\nfn fragmentRenderColoredTriangle(\\n  @builtin(position) pos_in: vec4<f32>\\n) ->\\n  @location(0) vec4<f32>\\n{\\n  return vec4<f32>(\\n    pos_in.x * 0.003,\\n    pos_in.y * 0.003,\\n    1.0 - (pos_in.y * 0.003),\\n    1.0,\\n  );\\n}\\n\";","/// <reference types=\"@webgpu/types\" />\n\nimport runDemo from \"./runDemo\"\n\nimport { Context, useProp, useGPUResource, useGPUUpdate } from \"@gpu-fu/gpu-fu\"\n\nimport shaderModuleCode from \"./demo1.wgsl\"\n\nrunDemo(RenderColoredTriangle)\n\nfunction RenderColoredTriangle(ctx: Context) {\n  const renderTarget = useProp<GPUTexture>(ctx)\n\n  const renderPipeline = useGPUResource(ctx, (ctx) => {\n    if (!renderTarget.current) return\n\n    return ctx.device.createRenderPipeline({\n      layout: \"auto\",\n      primitive: { topology: \"triangle-list\" },\n      vertex: {\n        module: ctx.device.createShaderModule({ code: shaderModuleCode }),\n        entryPoint: \"vertexRenderColoredTriangle\",\n      },\n      fragment: {\n        module: ctx.device.createShaderModule({ code: shaderModuleCode }),\n        entryPoint: \"fragmentRenderColoredTriangle\",\n        targets: [{ format: renderTarget.current.format }],\n      },\n    })\n  })\n\n  useGPUUpdate([renderTarget], ctx, (ctx) => {\n    if (!renderTarget.current) return\n    if (!renderPipeline.current) return\n\n    const passEncoder = ctx.commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.current.createView(),\n          clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: \"clear\" as GPULoadOp,\n          storeOp: \"store\" as GPUStoreOp,\n        },\n      ],\n    })\n    passEncoder.setPipeline(renderPipeline.current)\n    passEncoder.draw(3, 1, 0, 0)\n    passEncoder.end()\n  })\n\n  return { renderTarget }\n}\n","import {\n  Context,\n  ContextForGPUResource,\n  ContextForGPUAction,\n  MaybeDestroyableGPUResource,\n  ContextEmpty,\n  ContextImplementation,\n} from \"./Context\"\nimport { Unit, UnitFn } from \"./Unit\"\nimport { Property, PropertyImplementation, PropertyReadOnly } from \"./Property\"\n\nexport function useProp<T>(ctx: Context): Property<T | undefined> {\n  return ctx._useProp<T | undefined>(undefined) as Property<T | undefined>\n}\n\nexport function useInitializedProp<T>(\n  ctx: Context,\n  initialValue: (() => T) | T,\n): Property<T> {\n  return ctx._useProp<T>(initialValue)\n}\n\nexport function useUnit<U>(ctx: Context, unitFn: UnitFn<U>): Unit<U> {\n  const unitProp = ctx._useProp<Unit<U>>(() => ({\n    ...unitFn(ctx),\n    _ctx: ctx as ContextImplementation,\n  }))\n\n  return (unitProp as PropertyImplementation<Unit<U>>)._current\n}\n\nexport function useGPUResource<T extends MaybeDestroyableGPUResource>(\n  ctx: Context,\n  create: (ctx: ContextForGPUResource) => T,\n): PropertyReadOnly<T> {\n  return ctx._useGPUResource<T>(create)\n}\n\nexport function useGPUUpdate(\n  producedProps: PropertyReadOnly<unknown>[],\n  ctx: Context,\n  action: (ctx: ContextForGPUAction) => void,\n): void {\n  ctx._useGPUUpdate(producedProps, action)\n}\n\nexport function useEffect(\n  ctx: Context,\n  effect: (ctx: ContextEmpty) => (() => void) | undefined,\n) {\n  return ctx._useEffect(effect)\n}\n\nexport function useDerived<T>(\n  ctx: Context,\n  create: (ctx: ContextEmpty) => T,\n): PropertyReadOnly<T> {\n  return ctx._useDerived<T>(create)\n}\n","import { Context, ContextImplementation } from \"./Context\"\nimport { PropertyReadOnly } from \"./Property\"\n\nexport type Unit<U> = U & {\n  _ctx: ContextImplementation\n}\n\nexport type UnitRoot<U> = U & {\n  _ctx: ContextImplementation\n  runFrame: (\n    commandEncoder: GPUCommandEncoder,\n    outputs: PropertyReadOnly<unknown>[],\n  ) => void\n}\n\nexport type UnitFn<U> = (ctx: Context) => U\n\nexport function createUnitRoot<U>(\n  device: GPUDevice,\n  unitFn: UnitFn<U>,\n): UnitRoot<U> {\n  const ctx = new ContextImplementation(device)\n  const unitRoot = { ...unitFn(ctx), _ctx: ctx } as UnitRoot<U>\n  unitRoot.runFrame = (\n    commandEncoder: GPUCommandEncoder,\n    outputs: PropertyReadOnly<unknown>[],\n  ) => {\n    ctx._currentClockNumber += 1\n    ctx._commandEncoder = commandEncoder\n\n    const clockNumber = ctx._currentClockNumber\n    outputs.forEach((output) => output._produceIfNeededAt(clockNumber))\n\n    ctx._effects.forEach((effect) => effect._runIfNeededAt(clockNumber))\n\n    ctx._commandEncoder = undefined\n  }\n  return unitRoot\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","Symbol","toStringTag","Object","defineProperty","value","PropertyImplementation","constructor","initialValue","ctx","_changeAtNextTick","_changedClockNumber","_producedClockNumber","_producerOperations","_current","_next","_ctx","_attachProducerOperation","op","push","_runIfNeededAt","clockNumber","readingFrom","_readingFrom","_produceIfNeededAt","depsChanged","forEach","current","currentAction","_currentAction","Error","_attachDependency","getNonReactively","readOnly","setFrom","other","set","newValue","notify","setAndNotify","change","fn","mutate","DerivedImplementation","_deps","Set","_cachedClockNumber","_fn","dep","add","outerAction","previousResult","_cachedResult","destroy","currentDerived","_currentClockNumber","OperationImplementation","originalClockNumber","EffectImplementation","_lastClockNumber","lastCancelFn","_lastCancelFn","ContextImplementation","device","_effects","originalCreateBuffer","createBuffer","bind","descriptor","result","size","usage","originalCreateTexture","createTexture","width","height","format","_device","commandEncoder","_commandEncoder","_useProp","_useGPUResource","_useGPUUpdate","producedProps","prop","_useEffect","_useDerived","OutputCanvas","canvasContext","_renders","_canvasContext","addRender","render","includes","outputFrame","target","getCurrentTexture","canvas","renderTarget","runFrame","Float32Array","BYTES_PER_ELEMENT","getPreferredCanvasFormat","navigator","gpu","renderFn","undefined","renderPipeline","create","createRenderPipeline","layout","primitive","topology","vertex","createShaderModule","code","entryPoint","fragment","targets","action","passEncoder","beginRenderPass","colorAttachments","view","createView","clearValue","r","g","b","a","loadOp","storeOp","setPipeline","draw","end","setupFn","powerPreference","requestAdapter","requestDevice","getDevice","getContext","configure","alphaMode","compositingAlphaMode","getCanvasContext","document","querySelector","getDemoCanvas","frameFn","unitFn","unitRoot","outputs","output","effect","createUnitRoot","requestAnimationFrame","repeatFrameWithContext","createCommandEncoder","queue","submit","finish","runFrameWithContext","catch","error","innerHTML","console","runDemoInner"],"sourceRoot":""}